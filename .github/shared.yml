#<shared>

definitions:
  default-defaults: &default-defaults
    run:
      shell: bash
      
  checkout: &checkout
    uses: actions/checkout@v4
    with:
      fetch-depth: '0'

  setup-dotnet6: &setup-dotnet6
    name: Setup .NET 6
    uses: actions/setup-dotnet@v3
    with:
      dotnet-version: 6.0.x

  setup-verlite: &setup-verlite
      name: Setup Verlite
      run: |
        verlite_version="$(grep '"Verlite\.MsBuild"' Directory.Build.props | LC_ALL=en_US.utf8 grep -Po 'Version="\K[^"]+')"
        dotnet tool install --global Verlite.CLI --version "$verlite_version"
        verlite . --auto-fetch --verbosity verbatim

  setup-openssl: &setup-openssl
    name: Install OpenSSL 1.1
    if: runner.os == 'Linux'
    run: |
      wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.24_amd64.deb
      sudo apt-get install ./libssl1.1_1.1.1f-1ubuntu2.24_amd64.deb -f

  setup-nuget: &setup-nuget
    name: Setup NuGet
    run: |
      dotnet nuget update source github --store-password-in-clear-text --username AshleighAdams --password ${{ secrets.GITHUB_TOKEN }}
      dotnet nuget enable source github

  restore: &restore
    name: Restore
    run: dotnet restore

  build: &build
    name: Build
    run: dotnet build --configuration Release --no-restore

  test: &test
    name: Test
    run: dotnet test --configuration Debug --logger GitHubActions -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura

  mutation-test: &mutation-test
    name: Mutation Test
    run: |
      dotnet tool install --global dotnet-stryker --version 3.2.0
      cd tests/UnitTests
      if [[ "$GITHUB_REF" == "refs/heads/master" ]]; then
        dotnet stryker --reporter html --reporter dashboard --reporter progress --version master # --log-to-file
      else
        dotnet stryker --reporter html --reporter progress # --log-to-file
      fi
    env:
      STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}

  mutation-test-archive: &mutation-test-archive
    name: Archive mutation output
    if: success() || failure()
    run: |
      cd tests/UnitTests
      mkdir -p ../../artifacts
      find StrykerOutput -name mutation-report.html -exec cp {} ../../artifacts/ \;
      if [[ -d StrykerOutput ]]; then
        mv StrykerOutput ../../artifacts/StrykerOutput
      fi

  mutation-test-upload-artifacts: &mutation-test-upload-artifacts
    name: Upload mutation test artifacts
    uses: actions/upload-artifact@v4
    if: success() || failure()
    with:
      name: artifacts-mutation-test
      if-no-files-found: error
      path:  |
        artifacts/*

  publish-codecov: &publish-codecov
    name: Publish Codecov
    uses: codecov/codecov-action@v2
    with:
      token: ${{ secrets.CODECOV_TOKEN }}
      files: ./tests/UnitTests/coverage.cobertura.xml

  pack: &pack
    name: Pack
    run: dotnet pack -p:PackageOutputPath="$(pwd)/artifacts" --configuration Release --no-restore
    
  upload-artifacts: &upload-artifacts
    name: Upload Artifacts
    uses: actions/upload-artifact@v4
    if: success() || failure()
    with:
      name: artifacts
      if-no-files-found: error
      path:  |
        artifacts/*

  download-artifacts: &download-artifacts
    name: Download Artifacts
    uses: actions/download-artifact@v4
    with:
      path: artifacts
      pattern: '*'
      merge-multiple: true

  publish-github: &publish-github
    name: Publish Nuget GitHub
    run: dotnet nuget push 'artifacts/*.nupkg' -k ${GITHUB_TOKEN} -s github --skip-duplicate --no-symbols
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  empty: "hi" # fixes the yml parser from messing the last value up

#</shared>
